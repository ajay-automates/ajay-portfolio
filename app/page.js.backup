"use client";

import React, { useState, useEffect, useRef } from 'react';
import { Github, Linkedin, Mail, Home, Phone, MapPin, Code, Brain, Zap, Rocket, ArrowRight, ExternalLink } from 'lucide-react';

export default function Portfolio() {
  const [activeSection, setActiveSection] = useState('home');
  const [hoveredSkill, setHoveredSkill] = useState(null);
  const [hoveredProject, setHoveredProject] = useState(null);
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });
  const [particles, setParticles] = useState([]);
  const heroRef = useRef(null);
  const aboutRef = useRef(null);
  const experienceRef = useRef(null);
  const skillsRef = useRef(null);
  const projectsRef = useRef(null);
  const contactRef = useRef(null);

  // Generate particles for hero section
  useEffect(() => {
    const particleArray = Array.from({ length: 50 }, (_, i) => ({
      id: i,
      x: Math.random() * 100,
      y: Math.random() * 100,
      size: Math.random() * 4 + 1,
      duration: Math.random() * 20 + 10,
      delay: Math.random() * 5
    }));
    setParticles(particleArray);
  }, []);

  // Track mouse position for parallax effects
  useEffect(() => {
    const handleMouseMove = (e) => {
      setMousePosition({
        x: (e.clientX / window.innerWidth - 0.5) * 20,
        y: (e.clientY / window.innerHeight - 0.5) * 20
      });
    };
    window.addEventListener('mousemove', handleMouseMove);
    return () => window.removeEventListener('mousemove', handleMouseMove);
  }, []);

  useEffect(() => {
    const handleScroll = () => {
      const sections = [
        { ref: heroRef, id: 'home' },
        { ref: aboutRef, id: 'about' },
        { ref: experienceRef, id: 'experience' },
        { ref: skillsRef, id: 'skills' },
        { ref: projectsRef, id: 'projects' },
        { ref: contactRef, id: 'contact' }
      ];

      const currentSection = sections.find(section => {
        if (section.ref.current) {
          const rect = section.ref.current.getBoundingClientRect();
          return rect.top <= 150 && rect.bottom >= 150;
        }
        return false;
      });

      if (currentSection) {
        setActiveSection(currentSection.id);
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const scrollToSection = (sectionId) => {
    const sectionMap = {
      'home': heroRef,
      'about': aboutRef,
      'experience': experienceRef,
      'skills': skillsRef,
      'projects': projectsRef,
      'contact': contactRef
    };

    if (sectionMap[sectionId]?.current) {
      sectionMap[sectionId].current.scrollIntoView({ 
        behavior: 'smooth',
        block: 'start'
      });
    }
  };

  const skills = [
    { name: "Python", icon: "üêç", proficiency: 95, color: "#3776AB" },
    { name: "GPT-4", icon: "ü§ñ", proficiency: 95, color: "#10A37F" },
    { name: "React", icon: "‚öõÔ∏è", proficiency: 85, color: "#61DAFB" },
    { name: "Node.js", icon: "üü¢", proficiency: 80, color: "#339933" },
    { name: "FastAPI", icon: "‚ö°", proficiency: 90, color: "#009688" },
    { name: "Next.js", icon: "‚ñ≤", proficiency: 85, color: "#000000" },
    { name: "LangChain", icon: "ü¶ú", proficiency: 90, color: "#1C3C3C" },
    { name: "PostgreSQL", icon: "üêò", proficiency: 85, color: "#336791" },
    { name: "TensorFlow", icon: "üß†", proficiency: 75, color: "#FF6F00" },
    { name: "Docker", icon: "üê≥", proficiency: 90, color: "#2496ED" },
    { name: "AWS", icon: "‚òÅÔ∏è", proficiency: 90, color: "#FF9900" },
    { name: "TypeScript", icon: "TS", proficiency: 80, color: "#3178C6" },
    { name: "MongoDB", icon: "üçÉ", proficiency: 85, color: "#47A248" },
    { name: "Redis", icon: "üì¶", proficiency: 80, color: "#DC382D" },
    { name: "Kubernetes", icon: "‚ò∏Ô∏è", proficiency: 75, color: "#326CE5" },
    { name: "Azure", icon: "‚òÅÔ∏è", proficiency: 85, color: "#0078D4" }
  ];

  const projects = [
    {
      title: "Custom GPT Application with RAG",
      description: "Production-grade AI assistant with retrieval-augmented generation for domain-specific knowledge retrieval across 10,000+ documents with 95% accuracy.",
      tech: ["Python", "GPT-4", "LangChain", "Pinecone", "FastAPI", "AWS Lambda"],
      metrics: ["95% accuracy", "<2s response time", "1000+ daily users"]
    },
    {
      title: "Real-Time AI Voice Agent",
      description: "Conversational voice AI with sub-500ms latency, enabling natural speech interactions with GPT-4 intelligence and emotional awareness.",
      tech: ["Python", "Whisper", "ElevenLabs", "GPT-4", "WebSockets", "Azure"],
      metrics: ["<500ms latency", "50 concurrent sessions", "99.5% uptime"]
    },
    {
      title: "ApplyPilot - Job Application Automation",
      description: "Intelligent automation system using Claude AI to autonomously apply to jobs with 92% form parsing accuracy and 80% time reduction.",
      tech: ["Python", "Claude AI", "Selenium", "FastAPI", "TF-IDF", "Gmail API"],
      metrics: ["92% accuracy", "80% time savings", "50+ apps/day"]
    }
  ];

  const experience = [
    {
      title: "Full Stack Developer",
      company: "FolderWave",
      location: "USA",
      period: "Jan 2023 - Present",
      highlights: [
        "Architected recommendation engine with matrix factorization processing 500K+ daily interactions",
        "Built real-time personalization system with 50+ behavioral signals",
        "Developed predictive analytics for customer segmentation and churn prediction",
        "Engineered data pipeline with Apache Kafka achieving sub-100ms latency"
      ]
    },
    {
      title: "Full Stack Developer",
      company: "Ideabytes",
      location: "India",
      period: "Jan 2019 - Dec 2021",
      highlights: [
        "Developed collaborative filtering recommendation system increasing conversions by 15%",
        "Built search algorithms with TF-IDF scoring and personalized ranking",
        "Created automated ETL workflows with feature extraction pipelines",
        "Optimized database queries achieving 30% faster response times"
      ]
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-blue-950 to-slate-900 text-white overflow-hidden">
      {/* Animated Background Grid */}
      <div className="fixed inset-0 bg-[linear-gradient(to_right,#4f4f4f12_1px,transparent_1px),linear-gradient(to_bottom,#4f4f4f12_1px,transparent_1px)] bg-[size:64px_64px] pointer-events-none"></div>
      
      {/* Modern Navigation */}
      <header className="fixed top-0 left-0 right-0 z-50 bg-slate-950/50 backdrop-blur-xl border-b border-white/10">
        <div className="max-w-7xl mx-auto px-6 py-4 flex justify-between items-center">
          <div className="text-xl font-bold bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent">
            AN
          </div>
          
          <nav className="hidden md:flex gap-8 text-sm">
            {['home', 'about', 'experience', 'skills', 'projects', 'contact'].map((section) => (
              <button
                key={section}
                onClick={() => scrollToSection(section)}
                className={`relative transition-colors duration-300 hover:text-blue-400 capitalize ${
                  activeSection === section ? 'text-blue-400' : 'text-gray-400'
                }`}
              >
                {section}
                {activeSection === section && (
                  <span className="absolute -bottom-1 left-0 right-0 h-0.5 bg-gradient-to-r from-blue-400 to-purple-500"></span>
                )}
              </button>
            ))}
          </nav>

          <div className="flex gap-4">
            <a href="https://linkedin.com/in/ajaykumarreddynelavetla" target="_blank" rel="noopener noreferrer" 
               className="p-2 hover:bg-white/10 rounded-lg transition-all duration-300 hover:scale-110">
              <Linkedin size={20} className="text-blue-400" />
            </a>
            <a href="https://github.com/ajay-nelavetla" target="_blank" rel="noopener noreferrer"
               className="p-2 hover:bg-white/10 rounded-lg transition-all duration-300 hover:scale-110">
              <Github size={20} className="text-purple-400" />
            </a>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="pt-16">
        {/* Hero Section with Particles */}
        <section ref={heroRef} className="min-h-screen flex items-center justify-center px-8 relative overflow-hidden">
          {/* Animated Particles */}
          {particles.map((particle) => (
            <div
              key={particle.id}
              className="absolute rounded-full bg-blue-400/20 animate-float"
              style={{
                left: `${particle.x}%`,
                top: `${particle.y}%`,
                width: `${particle.size}px`,
                height: `${particle.size}px`,
                animationDuration: `${particle.duration}s`,
                animationDelay: `${particle.delay}s`
              }}
            />
          ))}

          {/* Gradient Orbs */}
          <div className="absolute top-1/4 left-1/4 w-96 h-96 bg-blue-500/20 rounded-full blur-3xl animate-pulse-slow"></div>
          <div className="absolute bottom-1/4 right-1/4 w-96 h-96 bg-purple-500/20 rounded-full blur-3xl animate-pulse-slow" style={{ animationDelay: '1s' }}></div>

          <div className="relative z-10 text-center max-w-5xl mx-auto"
               style={{
                 transform: `translate(${mousePosition.x}px, ${mousePosition.y}px)`,
                 transition: 'transform 0.3s ease-out'
               }}>
            {/* Animated Avatar */}
            <div className="relative inline-block mb-8 group">
              <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full blur-xl opacity-75 animate-glow group-hover:opacity-100 transition-opacity duration-300"></div>
              <div className="relative w-32 h-32 mx-auto rounded-full bg-gradient-to-br from-blue-500 via-purple-500 to-pink-500 flex items-center justify-center text-white text-4xl font-bold shadow-2xl transform group-hover:scale-110 transition-transform duration-300">
                AN
              </div>
            </div>
            
            <div className="space-y-4 mb-12">
              <p className="text-sm text-blue-400 uppercase tracking-[0.3em] font-semibold animate-fade-in-up">
                AI Engineer & Full Stack Developer
              </p>
              
              <h1 className="text-5xl md:text-7xl font-black mb-6 leading-tight">
                <span className="bg-gradient-to-r from-white via-blue-200 to-purple-300 bg-clip-text text-transparent">
                  Building the Future
                </span>
                <br />
                <span className="bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent">
                  with AI & Intelligence
                </span>
              </h1>
              
              <p className="text-xl text-gray-400 max-w-2xl mx-auto leading-relaxed">
                Crafting production-ready AI systems that solve real-world problems. 
                Specialized in GPT-4, RAG systems, and scalable ML infrastructure.
              </p>
            </div>

            <div className="flex flex-wrap justify-center gap-4 mb-12">
              <button 
                onClick={() => scrollToSection('projects')}
                className="group px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full font-semibold hover:shadow-2xl hover:shadow-blue-500/50 transition-all duration-300 hover:scale-105 flex items-center gap-2"
              >
                View My Work
                <ArrowRight size={20} className="group-hover:translate-x-1 transition-transform" />
              </button>
              <button 
                onClick={() => scrollToSection('contact')}
                className="px-8 py-4 bg-white/5 backdrop-blur-sm border border-white/20 rounded-full font-semibold hover:bg-white/10 transition-all duration-300 hover:scale-105"
              >
                Get in Touch
              </button>
            </div>

            {/* Stats Cards */}
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 max-w-3xl mx-auto">
              {[
                { icon: <Code size={24} />, label: '4+ Years', sublabel: 'Experience' },
                { icon: <Brain size={24} />, label: '50+', sublabel: 'AI Projects' },
                { icon: <Zap size={24} />, label: '95%', sublabel: 'Accuracy' },
                { icon: <Rocket size={24} />, label: '1000+', sublabel: 'Daily Users' }
              ].map((stat, idx) => (
                <div key={idx} className="p-4 bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10 hover:bg-white/10 transition-all duration-300 hover:scale-105 group">
                  <div className="text-blue-400 mb-2 group-hover:scale-110 transition-transform duration-300">
                    {stat.icon}
                  </div>
                  <div className="text-2xl font-bold">{stat.label}</div>
                  <div className="text-sm text-gray-400">{stat.sublabel}</div>
                </div>
              ))}
            </div>
          </div>

          {/* Scroll Indicator */}
          <div className="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
            <div className="w-6 h-10 border-2 border-white/30 rounded-full flex justify-center">
              <div className="w-1 h-2 bg-white/50 rounded-full mt-2 animate-pulse"></div>
            </div>
          </div>
        </section>

        {/* About Section */}
        <section ref={aboutRef} className="min-h-screen flex items-center justify-center px-8 py-20 relative">
          <div className="max-w-4xl w-full relative z-10">
            <div className="text-center mb-16">
              <h2 className="text-sm text-blue-400 uppercase tracking-[0.3em] mb-4 font-semibold">About Me</h2>
              <div className="w-20 h-1 bg-gradient-to-r from-blue-500 to-purple-500 mx-auto rounded-full"></div>
            </div>
            
            <div className="grid md:grid-cols-2 gap-8">
              <div className="p-8 bg-white/5 backdrop-blur-sm rounded-3xl border border-white/10 hover:bg-white/10 transition-all duration-300 hover:scale-105 group">
                <div className="text-4xl mb-4 group-hover:scale-110 transition-transform duration-300">üëã</div>
                <h3 className="text-2xl font-bold mb-4 bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
                  Hello, I'm Ajay
                </h3>
                <p className="text-gray-300 leading-relaxed">
                  An <span className="text-blue-400 font-semibold">AI Engineer</span> based in Boston, MA with 4+ years of software engineering experience. 
                  I specialize in building production-ready AI systems that scale.
                </p>
              </div>

              <div className="p-8 bg-white/5 backdrop-blur-sm rounded-3xl border border-white/10 hover:bg-white/10 transition-all duration-300 hover:scale-105 group">
                <div className="text-4xl mb-4 group-hover:scale-110 transition-transform duration-300">üöÄ</div>
                <h3 className="text-2xl font-bold mb-4 bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
                  My Passion
                </h3>
                <p className="text-gray-300 leading-relaxed">
                  I absolutely love AI, machine learning, and intelligent automation. 
                  Expertise in <span className="text-purple-400 font-semibold">GPT-4, RAG systems</span>, and <span className="text-pink-400 font-semibold">scalable ML infrastructure</span>.
                </p>
              </div>

              <div className="md:col-span-2 p-8 bg-gradient-to-br from-blue-500/10 to-purple-500/10 backdrop-blur-sm rounded-3xl border border-white/10 hover:border-white/20 transition-all duration-300 hover:scale-[1.02]">
                <div className="text-4xl mb-4">üí°</div>
                <h3 className="text-2xl font-bold mb-4">Currently Seeking</h3>
                <p className="text-gray-300 leading-relaxed text-lg">
                  I'm passionate about transforming ideas into intelligent systems that solve real-world problems. 
                  <span className="block mt-4 text-blue-400 font-semibold">
                    Open to: AI Engineer ‚Ä¢ ML Engineer ‚Ä¢ Founding Engineer Opportunities
                  </span>
                </p>
              </div>
            </div>
          </div>
        </section>

        {/* Experience Section */}
        <section ref={experienceRef} className="min-h-screen flex items-center justify-center px-8 py-20 relative">
          <div className="max-w-5xl w-full relative z-10">
            <div className="text-center mb-16">
              <h2 className="text-sm text-blue-400 uppercase tracking-[0.3em] mb-4 font-semibold">Experience</h2>
              <div className="w-20 h-1 bg-gradient-to-r from-blue-500 to-purple-500 mx-auto rounded-full"></div>
            </div>
            
            <div className="space-y-8">
              {experience.map((job, idx) => (
                <div key={idx} className="group relative p-8 bg-white/5 backdrop-blur-sm rounded-3xl border border-white/10 hover:bg-white/10 hover:border-blue-500/50 transition-all duration-300 hover:scale-[1.02]">
                  {/* Timeline Dot */}
                  <div className="absolute -left-4 top-8 w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-500 rounded-full border-4 border-slate-900 group-hover:scale-125 transition-transform duration-300"></div>
                  
                  <div className="flex flex-col md:flex-row md:items-start md:justify-between mb-6">
                    <div>
                      <h3 className="text-2xl font-bold mb-2 group-hover:text-blue-400 transition-colors duration-300">{job.title}</h3>
                      <p className="text-xl text-blue-400 font-semibold">{job.company}</p>
                    </div>
                    <div className="mt-2 md:mt-0 text-right">
                      <p className="text-gray-400 text-sm">{job.period}</p>
                      <p className="text-gray-500 text-sm">{job.location}</p>
                    </div>
                  </div>
                  
                  <ul className="space-y-3">
                    {job.highlights.map((highlight, i) => (
                      <li key={i} className="text-gray-300 leading-relaxed flex items-start group/item hover:text-white transition-colors duration-200">
                        <span className="text-blue-400 mr-3 text-xl group-hover/item:scale-125 transition-transform duration-200">‚Üí</span>
                        <span>{highlight}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Skills Section */}
        <section ref={skillsRef} className="min-h-screen flex items-center justify-center px-8 py-20 relative">
          <div className="max-w-6xl w-full relative z-10">
            <div className="text-center mb-16">
              <h2 className="text-sm text-blue-400 uppercase tracking-[0.3em] mb-4 font-semibold">Skills & Technologies</h2>
              <div className="w-20 h-1 bg-gradient-to-r from-blue-500 to-purple-500 mx-auto rounded-full"></div>
              <p className="text-gray-400 mt-4">Hover to see proficiency levels</p>
            </div>
            
            <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6">
              {skills.map((skill, idx) => (
                <div 
                  key={idx}
                  className="group relative"
                  onMouseEnter={() => setHoveredSkill(idx)}
                  onMouseLeave={() => setHoveredSkill(null)}
                >
                  <div className="relative p-6 bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10 hover:bg-white/10 hover:border-blue-500/50 transition-all duration-300 hover:scale-110 cursor-pointer">
                    {/* Animated background on hover */}
                    <div className="absolute inset-0 bg-gradient-to-br from-blue-500/20 to-purple-500/20 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    
                    <div className="relative">
                      <div className="text-4xl mb-3 text-center group-hover:scale-125 transition-transform duration-300">
                        {skill.icon}
                      </div>
                      <p className="text-xs text-center text-gray-300 font-medium">{skill.name}</p>
                      
                      {/* Progress bar shown on hover */}
                      <div className={`mt-3 transition-all duration-300 ${hoveredSkill === idx ? 'opacity-100 max-h-20' : 'opacity-0 max-h-0'}`}>
                        <div className="w-full bg-white/10 rounded-full h-1.5 overflow-hidden">
                          <div 
                            className="h-full bg-gradient-to-r from-blue-500 to-purple-500 rounded-full transition-all duration-1000"
                            style={{ 
                              width: hoveredSkill === idx ? `${skill.proficiency}%` : '0%',
                              transition: 'width 1s ease-out'
                            }}
                          ></div>
                        </div>
                        <p className="text-xs text-center mt-1 text-blue-400 font-semibold">{skill.proficiency}%</p>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Projects Section */}
        <section ref={projectsRef} className="min-h-screen flex items-center justify-center px-8 py-20 relative">
          <div className="max-w-6xl w-full relative z-10">
            <div className="text-center mb-16">
              <h2 className="text-sm text-blue-400 uppercase tracking-[0.3em] mb-4 font-semibold">Featured Projects</h2>
              <div className="w-20 h-1 bg-gradient-to-r from-blue-500 to-purple-500 mx-auto rounded-full"></div>
            </div>
            
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {projects.map((project, idx) => (
                <div 
                  key={idx} 
                  className="group relative"
                  onMouseEnter={() => setHoveredProject(idx)}
                  onMouseLeave={() => setHoveredProject(null)}
                >
                  <div className="relative h-full p-8 bg-white/5 backdrop-blur-sm rounded-3xl border border-white/10 hover:bg-white/10 hover:border-blue-500/50 transition-all duration-300 hover:scale-105 overflow-hidden">
                    {/* Animated gradient background */}
                    <div className="absolute inset-0 bg-gradient-to-br from-blue-500/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    
                    {/* Project number */}
                    <div className="absolute top-4 right-4 w-12 h-12 rounded-full bg-gradient-to-br from-blue-500 to-purple-500 flex items-center justify-center font-bold text-lg">
                      {idx + 1}
                    </div>
                    
                    <div className="relative">
                      <h3 className="text-2xl font-bold mb-4 group-hover:text-blue-400 transition-colors duration-300 pr-12">
                        {project.title}
                      </h3>
                      
                      <p className="text-gray-300 leading-relaxed mb-6 min-h-[120px]">
                        {project.description}
                      </p>
                      
                      {/* Tech Stack */}
                      <div className="flex flex-wrap gap-2 mb-6">
                        {project.tech.slice(0, 4).map((tech, i) => (
                          <span key={i} className="px-3 py-1 bg-white/5 border border-white/10 text-gray-300 text-xs rounded-full hover:bg-blue-500/20 hover:border-blue-500/50 hover:text-blue-300 transition-all duration-200">
                            {tech}
                          </span>
                        ))}
                        {project.tech.length > 4 && (
                          <span className="px-3 py-1 bg-white/5 border border-white/10 text-gray-400 text-xs rounded-full">
                            +{project.tech.length - 4}
                          </span>
                        )}
                      </div>
                      
                      {/* Metrics */}
                      <div className="space-y-2 mb-6">
                        {project.metrics.map((metric, i) => (
                          <div key={i} className="flex items-center gap-2">
                            <span className="w-1.5 h-1.5 rounded-full bg-blue-400"></span>
                            <span className="text-sm text-blue-400 font-medium">{metric}</span>
                          </div>
                        ))}
                      </div>
                      
                      {/* View Details Link */}
                      <div className={`flex items-center gap-2 text-purple-400 font-semibold transition-all duration-300 ${hoveredProject === idx ? 'translate-x-0 opacity-100' : '-translate-x-4 opacity-0'}`}>
                        <span>View Details</span>
                        <ExternalLink size={16} className="group-hover:translate-x-1 transition-transform duration-300" />
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Contact Section */}
        <section ref={contactRef} className="min-h-screen flex items-center justify-center px-8 py-20 relative">
          <div className="max-w-5xl w-full relative z-10">
            <div className="text-center mb-16">
              <h2 className="text-sm text-blue-400 uppercase tracking-[0.3em] mb-4 font-semibold">Get In Touch</h2>
              <div className="w-20 h-1 bg-gradient-to-r from-blue-500 to-purple-500 mx-auto rounded-full"></div>
              <h3 className="text-4xl font-bold mt-8 mb-4 bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">
                Let's Build Something Amazing Together
              </h3>
              <p className="text-gray-400 text-lg">
                Have a project in mind? Let's discuss how I can help bring your ideas to life.
              </p>
            </div>

            <div className="grid md:grid-cols-2 gap-8">
              {/* Contact Info Cards */}
              <div className="space-y-6">
                <div className="p-6 bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10 hover:bg-white/10 hover:border-blue-500/50 transition-all duration-300 hover:scale-105 group">
                  <div className="flex items-center gap-4">
                    <div className="p-3 bg-gradient-to-br from-blue-500 to-purple-500 rounded-xl group-hover:scale-110 transition-transform duration-300">
                      <Phone size={24} />
                    </div>
                    <div>
                      <p className="text-gray-400 text-sm mb-1">Phone</p>
                      <a href="tel:+18575761177" className="text-lg hover:text-blue-400 transition-colors duration-200">
                        (857) 576-1177
                      </a>
                    </div>
                  </div>
                </div>

                <div className="p-6 bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10 hover:bg-white/10 hover:border-purple-500/50 transition-all duration-300 hover:scale-105 group">
                  <div className="flex items-center gap-4">
                    <div className="p-3 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl group-hover:scale-110 transition-transform duration-300">
                      <Mail size={24} />
                    </div>
                    <div>
                      <p className="text-gray-400 text-sm mb-1">Email</p>
                      <a href="mailto:nelavetla.a@northeastern.edu" className="text-lg hover:text-purple-400 transition-colors duration-200 break-all">
                        nelavetla.a@northeastern.edu
                      </a>
                    </div>
                  </div>
                </div>

                <div className="p-6 bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10 hover:bg-white/10 hover:border-pink-500/50 transition-all duration-300 hover:scale-105 group">
                  <div className="flex items-center gap-4">
                    <div className="p-3 bg-gradient-to-br from-pink-500 to-red-500 rounded-xl group-hover:scale-110 transition-transform duration-300">
                      <MapPin size={24} />
                    </div>
                    <div>
                      <p className="text-gray-400 text-sm mb-1">Location</p>
                      <p className="text-lg">Boston, MA</p>
                    </div>
                  </div>
                </div>

                {/* Social Links */}
                <div className="p-6 bg-gradient-to-br from-blue-500/10 to-purple-500/10 backdrop-blur-sm rounded-2xl border border-white/10">
                  <p className="text-gray-400 text-sm mb-4">Connect with me</p>
                  <div className="flex gap-4">
                    <a href="https://linkedin.com/in/ajaykumarreddynelavetla" target="_blank" rel="noopener noreferrer" 
                       className="p-3 bg-white/10 hover:bg-blue-500/20 rounded-xl transition-all duration-300 hover:scale-110 group">
                      <Linkedin size={24} className="text-blue-400" />
                    </a>
                    <a href="https://github.com/ajay-nelavetla" target="_blank" rel="noopener noreferrer"
                       className="p-3 bg-white/10 hover:bg-purple-500/20 rounded-xl transition-all duration-300 hover:scale-110 group">
                      <Github size={24} className="text-purple-400" />
                    </a>
                  </div>
                </div>
              </div>

              {/* Contact Form */}
              <form className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <input
                    type="text"
                    placeholder="Your Name"
                    className="px-4 py-3 bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl text-white placeholder-gray-500 focus:outline-none focus:border-blue-500/50 focus:bg-white/10 transition-all duration-300"
                  />
                  <input
                    type="email"
                    placeholder="Your Email"
                    className="px-4 py-3 bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl text-white placeholder-gray-500 focus:outline-none focus:border-blue-500/50 focus:bg-white/10 transition-all duration-300"
                  />
                </div>
                <input
                  type="text"
                  placeholder="Subject"
                  className="w-full px-4 py-3 bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl text-white placeholder-gray-500 focus:outline-none focus:border-blue-500/50 focus:bg-white/10 transition-all duration-300"
                />
                <textarea
                  placeholder="Your Message"
                  rows={8}
                  className="w-full px-4 py-3 bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl text-white placeholder-gray-500 focus:outline-none focus:border-blue-500/50 focus:bg-white/10 transition-all duration-300 resize-none"
                ></textarea>
                <button
                  type="submit"
                  className="w-full py-4 bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl font-semibold hover:shadow-2xl hover:shadow-blue-500/50 transition-all duration-300 hover:scale-105 flex items-center justify-center gap-2 group"
                >
                  Send Message
                  <ArrowRight size={20} className="group-hover:translate-x-1 transition-transform" />
                </button>
              </form>
            </div>
          </div>
        </section>
      </main>

      {/* Floating Action Buttons */}
      <div className="fixed bottom-8 right-8 flex flex-col gap-4 z-50">
        <button
          onClick={() => scrollToSection('home')}
          className="w-14 h-14 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-500 hover:to-purple-500 rounded-full flex items-center justify-center text-white shadow-lg shadow-blue-500/50 transition-all duration-300 hover:scale-110 group"
        >
          <Home size={24} className="group-hover:scale-110 transition-transform" />
        </button>
      </div>

      {/* Footer */}
      <footer className="relative py-8 border-t border-white/10">
        <div className="max-w-7xl mx-auto px-8 text-center">
          <p className="text-gray-400 text-sm">
            ¬© 2025 Ajay Nelavetla. Built with Next.js & Tailwind CSS
          </p>
          <p className="text-gray-500 text-xs mt-2">
            Designed with üíô and AI
          </p>
        </div>
      </footer>
    </div>
  );
}